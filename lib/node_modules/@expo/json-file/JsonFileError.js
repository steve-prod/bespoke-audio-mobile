'use strict';function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError("Cannot call a class as a function");}}function _possibleConstructorReturn(self,call){if(!self){throw new ReferenceError("this hasn't been initialised - super() hasn't been called");}return call&&(typeof call==="object"||typeof call==="function")?call:self;}function _inherits(subClass,superClass){if(typeof superClass!=="function"&&superClass!==null){throw new TypeError("Super expression must either be null or a function, not "+typeof superClass);}subClass.prototype=Object.create(superClass&&superClass.prototype,{constructor:{value:subClass,enumerable:false,writable:true,configurable:true}});if(superClass)Object.setPrototypeOf?Object.setPrototypeOf(subClass,superClass):subClass.__proto__=superClass;}var JsonFileError=function(_Error){_inherits(JsonFileError,_Error);function JsonFileError(message,cause){_classCallCheck(this,JsonFileError);var fullMessage=cause?message+'\n\u2514\u2500 Cause: '+cause.name+': '+cause.message:message;var _this=_possibleConstructorReturn(this,(JsonFileError.__proto__||Object.getPrototypeOf(JsonFileError)).call(this,fullMessage));_this.name=_this.constructor.name;_this.cause=cause;_this.isJsonFileError=true;return _this;}return JsonFileError;}(Error);module.exports=JsonFileError;